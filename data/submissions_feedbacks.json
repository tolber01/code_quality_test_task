{
  "70271849": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "70268518": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(n):",
          "line_number": 3,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "70253022": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "70159178": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS237",
          "text": "Found a too complex `f` string",
          "line": "f\"\"\"{winners}",
          "line_number": 19,
          "column_number": 4,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "70158116": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "70106991": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "70104098": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "70046002": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "70045932": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 11,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "70045851": "Failed test #26 of 28. Wrong answer. Your output is:\nIt's the origin!\nIV\nThe correct answer is:\nIt's the origin!\n",
  "70045838": "Failed test #1 of 28. Runtime error\n\nThis is a sample test from the problem statement!\n\nTest input:\n3.987\n-10\nCorrect output:\nIV\n\nYour code output:\n\n\nError:\n  File \"jailed_code\", line 5\n    if x, y == 0, 0:\n        ^\nSyntaxError: invalid syntax\n",
  "70031307": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "70027232": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 6 > 3",
          "line": "if x == 0 and y != 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "elif x!= 0 and y ==0:",
          "line_number": 4,
          "column_number": 6,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "elif x!= 0 and y ==0:",
          "line_number": 4,
          "column_number": 19,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "elif x== 0 and y == 0:",
          "line_number": 6,
          "column_number": 6,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 10,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 14,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "70018152": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69997779": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69968630": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69953910": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69888226": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69847515": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69820742": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69791296": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69790483": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69788748": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69779113": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69756486": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 12,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "69733458": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69730689": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69721097": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69716948": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69684253": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 11,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "69683547": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69666509": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69661367": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "69647678": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69640224": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69630044": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69604436": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69585232": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69541856": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69515895": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69507494": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69477919": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69460404": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69364302": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69360205": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "69321115": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69283101": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69277465": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x == y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 12,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 18,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "69274429": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69263034": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69227082": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69214471": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69147162": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "69014989": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68979814": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68979467": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68940845": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68920327": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68896123": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68816434": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68731449": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68730864": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68713271": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(num_input):",
          "line_number": 5,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "68622424": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(num_input):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "68589987": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68548977": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68546189": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68517792": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x_axis == 0 and y_axis == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x_axis < 0 and y_axis > 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "68511571": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68464321": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68402248": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68398923": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68350633": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68345440": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68278168": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68243332": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68243269": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68232899": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68214689": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x > 0 and y > 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "68175286": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68168529": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68045305": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "68006792": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67995738": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 10,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "elif x <0 and y < 0:",
          "line_number": 12,
          "column_number": 8,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "67961824": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67952845": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67918194": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(line):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "67908016": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67871823": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67862419": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67794578": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67792302": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67762589": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67743422": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "67677244": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67656293": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67643525": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67609842": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67578136": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67570098": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 6 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif (-100 <= x < 0) and (0 < y <= 100):",
          "line_number": 10,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS432",
          "text": "Found magic number: 13. The use of unnamed magic numbers in code hides the developers' intent in choosing that number, increases opportunities for subtle errors and makes it more difficult for the program to be adapted and extended in the future.\nHowever, for small programs it can be allowed, but it is better to use constants instead of magic numbers.",
          "line": "elif (-100 <= x < 0) and (-13 <= y < 100):",
          "line_number": 12,
          "column_number": 27,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS333",
          "text": "Found implicit complex compare",
          "line": "elif (0 < x <= 100) and (0 > y >= -10):",
          "line_number": 14,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS334",
          "text": "Found reversed complex comparison",
          "line": "elif (0 < x <= 100) and (0 > y >= -10):",
          "line_number": 14,
          "column_number": 25,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "67537477": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67512130": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67435210": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67433413": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if float(x_coordinate) == 0 and float(y_coordinate) == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "67398000": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67380136": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(number_of_lines):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "67367549": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67324377": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67310458": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67246239": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67182397": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if (A == 0 and B == 0):",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif (A < 0 and B > 0):",
          "line_number": 8,
          "column_number": 6,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "67158506": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67107522": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "67101918": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67042455": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67015663": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67012426": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67007869": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "67006255": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66975391": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66948986": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66930606": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66909618": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66905434": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66834738": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66826351": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x_axis == 0 == y_axis:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "C0122",
          "text": "Comparison should be x_axis > 0",
          "line": "elif 0 < x_axis and 0 < y_axis:",
          "line_number": 6,
          "column_number": 5,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "C0122",
          "text": "Comparison should be y_axis > 0",
          "line": "elif 0 < x_axis and 0 < y_axis:",
          "line_number": 6,
          "column_number": 20,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS309",
          "text": "Found reversed compare order",
          "line": "elif 0 < x_axis and 0 < y_axis:",
          "line_number": 6,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS309",
          "text": "Found reversed compare order",
          "line": "elif 0 < x_axis and 0 < y_axis:",
          "line_number": 6,
          "column_number": 20,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "66717288": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66702987": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS237",
          "text": "Found a too complex `f` string",
          "line": "print(f'{winners}\\n{len(winners)}')",
          "line_number": 3,
          "column_number": 6,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "66702443": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(0, loop_number):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "66697258": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'suma'",
          "line": "suma = []",
          "line_number": 1,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'suma'",
          "line": "suma.append(m)",
          "line_number": 5,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'suma'",
          "line": "print(sum(suma) / n)",
          "line_number": 7,
          "column_number": 10,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "66695257": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66675008": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66656004": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS407",
          "text": "Found mutable module constant",
          "line": "QUADRANTS = {(True, True): \"I\",",
          "line_number": 0,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "66531164": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66512454": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0613",
          "text": "Unused argument 'start'",
          "line": "def range_sum(numbers, start, end):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0613",
          "text": "Unused argument 'end'",
          "line": "def range_sum(numbers, start, end):",
          "line_number": 0,
          "column_number": 30,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "66487534": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66258867": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66183365": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66182701": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66157412": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66155975": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66135348": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66085103": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66080294": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66055732": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66042260": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66034670": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "66020217": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65993411": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(numb):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "65976318": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65946905": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65933790": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65920715": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65905351": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65877090": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65828054": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 11,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "65792214": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65765245": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65764780": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "65754876": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65736099": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65619026": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65553242": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65522821": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65506504": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65475819": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65435550": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65398225": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65369271": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65349238": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65307366": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65307132": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65227694": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "65212804": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64975868": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64975274": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64936445": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64888010": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64879926": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64747667": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y >= 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "64673255": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "64670815": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64652517": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64599518": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64526986": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64521990": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(n):",
          "line_number": 3,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "64499934": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64483233": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS530",
          "text": "Found implicit negative index",
          "line": "if info[len(info) - 1] == \"win\":",
          "line_number": 5,
          "column_number": 7,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "64425750": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64395926": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64377260": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64374572": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64339091": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64310157": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 5,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 11,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 15,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "64271597": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64253568": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64217912": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64190729": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "64179175": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64176886": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64172088": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64155205": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64154807": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64125339": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "64121855": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 11,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "64046146": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63998297": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63933990": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63927541": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "63914390": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63885486": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63813355": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63793004": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63748556": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63733992": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for a in range(n):",
          "line_number": 3,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'a' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for a in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "63674010": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x > 0 and y > 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 5,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "63641372": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "63627261": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63589381": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63570689": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(a):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "63568861": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63551562": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'number' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for number in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "63545612": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63493066": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63335531": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS237",
          "text": "Found a too complex `f` string",
          "line": "print(f'{lst}\\n{len(lst)}')",
          "line_number": 1,
          "column_number": 6,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "63325175": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS334",
          "text": "Found reversed complex comparison",
          "line": "elif x > 0 > y:",
          "line_number": 10,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "63317922": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63234473": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63061480": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63013478": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63001123": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "63000314": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62997708": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62995695": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62918721": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62915176": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62866535": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS237",
          "text": "Found a too complex `f` string",
          "line": "print(f\"{new_tab}\\n{len(new_tab)}\")",
          "line_number": 5,
          "column_number": 6,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "62855448": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ = 0",
          "line_number": 1,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ = summ + int(input())",
          "line_number": 3,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ = summ + int(input())",
          "line_number": 3,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "print(summ / n)",
          "line_number": 4,
          "column_number": 6,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "62761703": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62697855": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62628900": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62617555": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62608704": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62595093": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62589924": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62580697": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if a == 0 and b == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif a > 0 and b < 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif a < 0 and b > 0:",
          "line_number": 10,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "62544216": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62528651": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "cnt+=1",
          "line_number": 3,
          "column_number": 7,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "62527332": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62499486": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62479364": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(N):",
          "line_number": 3,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "62477380": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62359440": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62281002": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62248460": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62217917": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62179790": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62150740": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62098737": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62055827": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62042544": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62035673": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62031283": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62027599": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "62017434": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61908184": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61908051": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'n' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for n in range(integers):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "61899526": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61894345": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61892456": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61848743": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61828213": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61810245": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61712190": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61685573": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61683278": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61636004": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61619944": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(int(input())):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "61601502": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61590115": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61543656": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61524280": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61447093": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61411835": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61389119": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61387240": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61382919": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61325585": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61228443": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61192725": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61173589": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61170582": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61144067": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61141619": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS237",
          "text": "Found a too complex `f` string",
          "line": "print(str(data) + f\"\\n{len(data)}\")",
          "line_number": 2,
          "column_number": 18,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS336",
          "text": "Found explicit string concatenation",
          "line": "print(str(data) + f\"\\n{len(data)}\")",
          "line_number": 2,
          "column_number": 18,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "61135381": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61118380": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "61082893": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60994955": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60910305": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60904319": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60902427": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60794741": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS503",
          "text": "Found useless returning `else` statement",
          "line": "return 0",
          "line_number": 5,
          "column_number": 8,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "60761498": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60711879": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60643225": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60590000": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60556789": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60476189": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60433419": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC100",
          "text": "Possibly misspelt word: 'yandere'",
          "line": "# i feel like yandere dev but might as well give you all something to laugh at",
          "line_number": 0,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 6,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "60385092": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60373048": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60372023": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60294916": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'stroki'",
          "line": "stroki = int(input())",
          "line_number": 0,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(stroki):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'stroki'",
          "line": "for x in range(stroki):",
          "line_number": 4,
          "column_number": 15,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "60243999": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "\"II\": lambda x, y: x < 0 and y > 0,",
          "line_number": 5,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "\"IV\": lambda x, y: x > 0 and y < 0,",
          "line_number": 7,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "60191239": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60184757": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60140036": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60093996": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60075817": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "60040140": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59976855": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "59974802": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "59965773": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59945798": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59895774": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59895592": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59860993": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59762142": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59683613": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59679975": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59633674": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59613129": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59611128": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59580414": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59526659": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59517888": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59455119": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59432355": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59420085": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59391560": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59330915": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summy'",
          "line": "summy = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if i <= end and i >= start:",
          "line_number": 3,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summy'",
          "line": "summy += i",
          "line_number": 4,
          "column_number": 12,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summy'",
          "line": "return summy",
          "line_number": 5,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "59312027": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59269227": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(string):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "59267212": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59243747": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59239697": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 13,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "59239489": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59205521": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59130914": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59079886": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59079632": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'n' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for n in range(lines):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS350",
          "text": "Found usable augmented assign pattern",
          "line": "num_sum = num_sum + user_number",
          "line_number": 4,
          "column_number": 4,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "59066811": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59063872": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "59045692": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS231",
          "text": "Found function with too much cognitive complexity: 30 > 12",
          "line": "def coordinate(x, y):",
          "line_number": 0,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 1,
          "column_number": 4,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 5,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 9,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "59044338": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58980284": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58949212": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58937774": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58922213": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58788737": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58740131": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58438835": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58297099": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58278969": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58250587": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if 0 < x <= y:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "58236639": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "58185006": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58120575": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58058356": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "58026283": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57969264": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57966563": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS231",
          "text": "Found function with too much cognitive complexity: 22 > 12",
          "line": "def coordinates(coordinate_x, coordinate_y):",
          "line_number": 0,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "57962506": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57942557": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS221",
          "text": "Found line with high Jones Complexity: 16 > 14",
          "line": "if x == 0 and y != 0 or x != 0 and y == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y != 0 or x != 0 and y == 0:",
          "line_number": 2,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 10,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "57866219": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57805395": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57695311": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'counter' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for counter in range(lines_count):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "57507032": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57502768": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57464937": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57348129": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0106",
          "text": "Expression \"print('I') if y > 0 else print('IV')\" is assigned to nothing",
          "line": "print(\"I\") if y > 0 else print(\"IV\")",
          "line_number": 8,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "W0106",
          "text": "Expression \"print('II') if y > 0 else print('III')\" is assigned to nothing",
          "line": "print(\"II\") if y > 0 else print(\"III\")",
          "line_number": 10,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "57338249": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57329781": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57286364": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57235429": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS221",
          "text": "Found line with high Jones Complexity: 16 > 14",
          "line": "print(sum([int(input()) for _ in range(lines)]) / lines)",
          "line_number": 1,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "57127630": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57104163": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57103867": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57067580": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 5 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 13,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "57060357": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 4,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "WPS221",
          "text": "Found line with high Jones Complexity: 16 > 14",
          "line": "elif (x == 0 and y != 0) or (x != 0 and y == 0):",
          "line_number": 7,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 13,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "57056498": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "57050543": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "57048722": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS122",
          "text": "Found all unused variables definition: _n",
          "line": "for _n in range(N):",
          "line_number": 2,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "57000162": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56948446": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56925358": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(lines):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "56892945": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56889939": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "56866378": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56852659": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56845406": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56813483": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56800341": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56793116": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56701809": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56696820": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56688267": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56642297": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'line' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for line in range(lines):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "56537463": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56463143": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56462918": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56433239": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if (x, y) == (0, 0):",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 7,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "56414814": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56407646": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56392313": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56390626": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56386025": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56331590": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56264834": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "'II': x < 0 and y > 0,",
          "line_number": 3,
          "column_number": 10,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "'IV': x > 0 and y < 0,",
          "line_number": 5,
          "column_number": 10,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C812",
          "text": "missing trailing comma",
          "line": "'One of the coordinates is equal to zero!': x == 0 or y == 0",
          "line_number": 7,
          "column_number": 64,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "56247189": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56238970": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56218716": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56202682": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 7,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 11,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "56125670": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "56122900": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56116933": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56092828": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56085304": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "56079319": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x < 0 and y < 0:",
          "line_number": 10,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "WPS409",
          "text": "Found heterogeneous compare",
          "line": "elif 0 < x > 0 and y < 0:",
          "line_number": 12,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "WPS333",
          "text": "Found implicit complex compare",
          "line": "elif 0 < x > 0 and y < 0:",
          "line_number": 12,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 16,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "55990113": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55984799": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55942025": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55901631": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55879438": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'som'",
          "line": "som = 0",
          "line_number": 1,
          "column_number": 0,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'som'",
          "line": "som += i",
          "line_number": 4,
          "column_number": 4,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'som'",
          "line": "print(som / number)",
          "line_number": 5,
          "column_number": 6,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "55846555": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'number' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for number in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "55844804": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "55834133": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55821852": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55802256": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55800967": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55800238": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55776451": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55756822": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55674462": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55660484": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55657741": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS223",
          "text": "Found too many `elif` branches: 4 > 3",
          "line": "if x == 0 and y == 0:",
          "line_number": 3,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "elif x ==0 or y == 0:",
          "line_number": 5,
          "column_number": 9,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "55652480": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55635127": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55612997": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55607403": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55557125": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS349",
          "text": "Found redundant subscript slice",
          "line": "winners.append(text[0:text.find(' win')])",
          "line_number": 5,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "55556091": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55554200": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55539826": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55530876": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(matches):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "55530824": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55512024": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55511934": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55511632": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55483099": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55482067": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55481336": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55446937": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55445644": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55438449": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55437999": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55401330": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55397916": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55378684": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55365404": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55312484": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55272447": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "55218989": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55159573": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 5,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "55149834": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55145433": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55109535": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55047950": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55027934": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55027048": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55014083": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "55009565": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54970215": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54952925": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54951565": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54929332": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54895470": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 6,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "54814894": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54814313": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54804353": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54798697": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 5,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "54798570": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54798475": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(mean_n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "54783035": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54740250": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54710345": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54710336": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54708175": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54701134": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54693935": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "54683954": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54677759": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54669238": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54639561": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'lst'",
          "line": "lst = []",
          "line_number": 1,
          "column_number": 0,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'lst'",
          "line": "lst.append(int(input()))",
          "line_number": 3,
          "column_number": 4,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'lst'",
          "line": "print(sum(lst) / len(lst))",
          "line_number": 4,
          "column_number": 10,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'lst'",
          "line": "print(sum(lst) / len(lst))",
          "line_number": 4,
          "column_number": 21,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "54606414": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54586889": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54575122": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54558550": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54548711": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 10,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 12,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "54509041": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54501252": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54490848": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54472507": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54467745": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54437100": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54411816": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "54395265": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54383360": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54374520": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54368259": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54340954": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54307229": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54296365": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54271015": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54256658": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54238849": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54232183": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54192153": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54187549": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54168915": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54163418": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54120036": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54104605": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54085430": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54079654": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54072424": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54072245": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54060908": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54047676": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54036422": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "54011725": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53998992": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53974092": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "return sum(int(num) for num in numbers if int(start) <= int(num) <= int(end))",
          "line_number": 1,
          "column_number": 19,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "return sum(int(num) for num in numbers if int(start) <= int(num) <= int(end))",
          "line_number": 1,
          "column_number": 28,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "return sum(int(num) for num in numbers if int(start) <= int(num) <= int(end))",
          "line_number": 1,
          "column_number": 64,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "input_num_list = input().split(\" \")",
          "line_number": 5,
          "column_number": 10,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "range_sum(numbers=input_num_list, start=a, end=b)",
          "line_number": 8,
          "column_number": 32,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "53951269": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'lst'",
          "line": "lst = []",
          "line_number": 0,
          "column_number": 0,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "num = int(input())",
          "line_number": 2,
          "column_number": 0,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(num):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "for i in range(num):",
          "line_number": 3,
          "column_number": 15,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'lst'",
          "line": "lst.append(_[0])",
          "line_number": 6,
          "column_number": 8,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'lst'",
          "line": "print(lst, count, sep=\"\\n\")",
          "line_number": 8,
          "column_number": 6,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "53934436": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53931968": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53853958": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53847722": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53809355": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "num_of_lines = int(input())",
          "line_number": 0,
          "column_number": 0,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "for _ in range(num_of_lines):",
          "line_number": 3,
          "column_number": 15,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "53792286": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53791609": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53773579": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53762240": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53735538": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53730673": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53695479": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53604605": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53572225": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53569327": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53550897": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53546006": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53529081": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53520091": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53487697": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53468886": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53460658": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53453291": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 5,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 9,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "53341766": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53336428": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53335954": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "return sum(num for num in numbers if start <= num <= end)",
          "line_number": 1,
          "column_number": 15,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "return sum(num for num in numbers if start <= num <= end)",
          "line_number": 1,
          "column_number": 23,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'num'",
          "line": "return sum(num for num in numbers if start <= num <= end)",
          "line_number": 1,
          "column_number": 50,
          "category": "INFO",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "53316849": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53298417": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53281627": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53265642": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53242230": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53236106": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53235733": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53228750": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53216510": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53199538": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53199287": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 7,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 9,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "53167371": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 12,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "53150601": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53115280": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53068409": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53067232": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53051141": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53050622": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "53011033": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52926491": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52915855": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52896797": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "W0120",
          "text": "Else clause on loop without a break statement",
          "line": "else:",
          "line_number": 5,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "52866958": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52858175": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52845630": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52836186": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52674300": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52653362": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52636859": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 5,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 7,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "52632051": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52626270": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52625890": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52612743": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52611875": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52595530": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52584761": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "C407",
          "text": "Unnecessary list comprehension - 'sum' can take a generator.",
          "line": "sum_ = sum([1 if x[1] == 'win' else 0 for x in players])",
          "line_number": 3,
          "column_number": 7,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "52570304": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52555577": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52546395": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52541288": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52499346": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52441070": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52432425": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52422878": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "52382154": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52373390": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52320589": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52319026": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52310635": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52275201": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52149915": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52135284": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52133186": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "52089740": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52085583": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0326",
          "text": "No space allowed before bracket",
          "line": "print (\"One of the coordinates is equal to zero!\")",
          "line_number": 6,
          "column_number": 10,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 13,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "52063393": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52056965": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "52037289": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51998665": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51992101": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51980162": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51972402": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51971032": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51964257": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51962950": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51962840": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51962609": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51917837": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51902470": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51895286": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "51875794": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(0, n_numbers):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "51835063": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51830413": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51796411": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51786259": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51786252": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51766067": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51689962": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51669470": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51636848": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51630853": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51616103": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51614776": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51574608": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(size):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "51552304": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51533418": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51512816": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51511549": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51499025": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51495985": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51490363": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51488460": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51480976": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 12,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "51470593": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51464163": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51442667": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51422855": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51422151": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51422130": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "51351320": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51343714": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51341093": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51335042": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51308779": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51293953": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51211423": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51180326": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 12,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "51138427": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51138358": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51129480": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51125882": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51097724": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51026229": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51003638": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "51000815": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50979450": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50945396": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50915374": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50898771": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50898564": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 13,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50898132": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50898117": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0326",
          "text": "Exactly one space required after comparison",
          "line": "if c =='win':",
          "line_number": 5,
          "column_number": 9,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50891368": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50866858": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50866474": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50828912": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50815071": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50809043": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50803188": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50800761": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50796042": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(0, num):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50781511": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 12,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50772039": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50770227": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50753102": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "C407",
          "text": "Unnecessary list comprehension - 'sum' can take a generator.",
          "line": "return sum([x for x in numbers if start <= x <= end])",
          "line_number": 1,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50748807": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50746765": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50699939": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50682952": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50657390": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50628833": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50614211": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50610742": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50590119": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50583386": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50579052": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(mean):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50570275": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50565128": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50562921": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50549462": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50537651": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50511398": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50502146": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50499560": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50469589": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50468646": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(num):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(j/num)",
          "line_number": 6,
          "column_number": 7,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50459734": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50434737": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50433960": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50403014": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50401428": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50401000": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50383239": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "\"II\" if lst[0] < 0 and lst[1] > 0 else",
          "line_number": 4,
          "column_number": 12,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "\"IV\" if lst[0] > 0 and lst[1] < 0 else",
          "line_number": 6,
          "column_number": 12,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50374215": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50352230": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50344264": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 11,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50312622": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50306915": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50279303": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50225760": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50216084": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50201020": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50187390": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50186252": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50125580": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50120960": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50114866": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50114687": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50114282": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50112926": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50095486": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50086949": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if X_axis < 0 and Y_axis > 0:",
          "line_number": 4,
          "column_number": 3,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if X_axis > 0 and Y_axis < 0:",
          "line_number": 8,
          "column_number": 3,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50086366": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50086271": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(numbers):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50067775": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif a < 0 and b > 0:",
          "line_number": 4,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif a > 0 and b < 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "50022279": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50018129": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "50015090": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49992122": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "49966642": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49965281": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49965031": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49905641": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49900301": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49899127": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49896912": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49892792": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49880605": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49863281": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49863192": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49847109": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49799464": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49783262": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49779662": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49744835": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49744775": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'n' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for n in range(total_lines):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "49681059": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49677606": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49673934": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49665753": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49652293": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49621637": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49590268": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49588971": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "E741",
          "text": "ambiguous variable name 'l'",
          "line": "l = []",
          "line_number": 1,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(a):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "49551359": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(number):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "49536850": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49482421": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49480780": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49471871": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49468376": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49447493": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49442985": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49429797": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49367025": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49354007": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49352259": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "49298387": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "49294766": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49253707": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif first < 0 and second > 0:",
          "line_number": 9,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "49243996": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 5,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "49230998": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49212614": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49209909": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49193458": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49166568": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49160423": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49155507": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49137283": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(ok):",
          "line_number": 1,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "49109103": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49066897": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49063246": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if (num >= int(start)) and (num <= int(end)):",
          "line_number": 4,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "49060628": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49059499": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "49046970": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48943081": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48931345": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48838087": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48838039": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48832572": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48725995": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48698950": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48680743": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48658670": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48653074": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48641472": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48641014": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48615650": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48553370": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48550338": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48479273": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48472451": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48467071": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48427074": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48410370": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48365867": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48343853": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48333296": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48320629": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48300419": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48271320": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48264986": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48264214": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(mean):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "48249548": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif (x_axis < 0) and (y_axis > 0):",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif (x_axis > 0) and (y_axis < 0):",
          "line_number": 13,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "48238720": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48190229": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48185899": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48177207": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48146429": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48128342": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48105032": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48087581": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48079813": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48074765": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48054522": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48049207": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48047938": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48038223": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48032297": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48030905": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48020270": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48011678": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "48003304": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47998739": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47934001": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47898447": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47877060": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47869430": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47816171": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(float(a/number))",
          "line_number": 9,
          "column_number": 13,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "47801234": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47769179": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47768929": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47744768": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif (x < 0 and y > 0):",
          "line_number": 8,
          "column_number": 6,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "47740493": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47719902": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47647517": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47639514": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47637365": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47632040": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47586804": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(count_people):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "47565971": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47485328": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47447156": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47415315": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47411721": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47352509": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47350960": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47338995": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47337421": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47337365": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47337278": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "47246875": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47240347": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47239164": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47202829": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47180641": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0305",
          "text": "Trailing newlines",
          "line": "",
          "line_number": 8,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "47163234": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47116878": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "47069321": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46983983": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46970437": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46968711": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46963550": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46951239": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46943052": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "C407",
          "text": "Unnecessary list comprehension - 'sum' can take a generator.",
          "line": "return sum([int(x) for x in numbers if int(start) <= int(x) <= int(end)])",
          "line_number": 1,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "46924746": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46906774": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46855913": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46786546": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46654347": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46627457": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "46622734": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46622484": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 4,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "46608360": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46591848": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46589313": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46582136": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46556275": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46555235": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46545149": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46536169": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46522129": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46514462": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46470556": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46466134": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46465012": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if x > 0 and y < 0:",
          "line_number": 4,
          "column_number": 3,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if x < 0 and y > 0:",
          "line_number": 6,
          "column_number": 3,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "46429468": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46396414": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46392675": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46361674": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46352561": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46342057": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46313053": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46267425": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46250523": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46229217": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46219626": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46208704": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46146299": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46105538": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46069084": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "46066679": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45994682": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45948416": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45927408": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45915629": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45866669": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45865065": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45856120": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45852426": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45849438": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45812727": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45802758": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45800966": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45762738": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45727735": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45710258": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45696481": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45687330": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45675657": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45674019": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45643159": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45597956": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45588740": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45575643": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45565424": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45534795": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45481998": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45443814": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45437065": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45427764": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45412770": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45339322": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45312263": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45297413": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45268697": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45261663": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45233453": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45225690": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45223013": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45196825": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45193320": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45192070": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45134874": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif a > 0 and b < 0:",
          "line_number": 9,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif a < 0 and b > 0:",
          "line_number": 11,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "45123081": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45117259": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45071886": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'name' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for name in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "45026170": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "45022051": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44994449": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44977895": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44976281": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "\"II\" if x < 0 and y > 0 else",
          "line_number": 5,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "\"IV\" if x > 0 and y < 0 else",
          "line_number": 7,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0330",
          "text": "Wrong continued indentation.",
          "line": ")",
          "line_number": 9,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "44958520": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44953158": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44913321": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44899834": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44891631": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44881102": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44874546": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44868936": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44821604": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44760287": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44753484": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44750261": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44736484": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44716283": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44679784": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44599830": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44598132": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44560835": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44473583": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44463910": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44430423": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44409636": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0200",
          "text": "Consider using enumerate instead of iterating with range and len",
          "line": "for i in range(len(numbers)):",
          "line_number": 2,
          "column_number": 4,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "44399689": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44382852": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44377968": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44377415": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(stroki):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "44369822": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44345118": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44325400": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44298221": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44245796": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44235666": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44227153": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44213555": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44200343": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44176024": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44172106": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44170009": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44161737": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44134607": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44060852": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44037195": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44027351": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44020054": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "44017750": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44016015": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "44006123": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43972511": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43944379": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43922954": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43900016": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43854531": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43842884": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43842313": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43804439": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43799800": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43788707": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(0, n):",
          "line_number": 6,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "43777957": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43775208": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43759581": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43725281": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43702176": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43660655": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43637719": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43622513": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43606636": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(0, times):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "43588977": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43582416": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43574514": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43548482": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43521423": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43519693": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43495964": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43464420": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43454356": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43405802": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43383400": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43371488": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43345496": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43319972": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43272486": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43267565": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43263276": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43261507": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43252167": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43228612": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43202630": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43200550": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43194639": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43147316": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43134844": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43118926": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 5,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "43096992": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43092875": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43066038": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43034703": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43030268": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "43023415": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42966966": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42944973": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(a):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "42928589": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42921602": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42912241": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42895746": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42895156": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42874299": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42866562": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42858373": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42845447": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42832262": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42829871": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(0, n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "42826609": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42825239": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42803169": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42771524": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42771509": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "W0105",
          "text": "String statement has no effect",
          "line": "\"\"\"",
          "line_number": 6,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "42770521": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42757587": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42699119": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42665093": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42631015": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42588226": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42566180": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42560233": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42541903": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42527654": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42519643": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42517387": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42502822": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42499687": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42455539": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42454780": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42449573": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42437779": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42433248": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42421372": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'n' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for n in range(count):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "42391558": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42377468": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42372434": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42367169": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "C407",
          "text": "Unnecessary list comprehension - 'sum' can take a generator.",
          "line": "return sum([x for x in numbers if first <= x <= second])",
          "line_number": 2,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "42336418": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(number_of_lines):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "42302837": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42301115": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42294852": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42284083": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42277259": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42263060": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42243066": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42216792": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42202518": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42188169": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42152349": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42144546": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42142816": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42133287": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42133057": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(['I', 'II', 'IV', 'III'][(x < 0) + (y < 0)*2])",
          "line_number": 8,
          "column_number": 52,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "42127116": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42091068": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42082844": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42082248": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42066099": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42050920": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42037625": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42021311": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "42008520": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(count):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "41957619": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'number' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for number in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "41948717": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41922308": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41890172": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41884638": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41872203": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41852165": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41832771": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41765641": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 4,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "41760121": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41759995": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "41718119": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41714593": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41711707": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41657366": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41614819": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41604888": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41591324": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "41557309": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41554507": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(int(input())):",
          "line_number": 1,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "41511175": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41507837": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41490404": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41477518": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0305",
          "text": "Trailing newlines",
          "line": "",
          "line_number": 9,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "41438547": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41418247": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41400095": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41353249": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41351753": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41326827": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41324806": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41318957": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41318872": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41318755": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "41304266": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41289814": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41277150": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41246415": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41222074": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41220582": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41187562": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41187521": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41161214": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41156640": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41128830": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0200",
          "text": "Consider using enumerate instead of iterating with range and len",
          "line": "for i in range(0, len(numbers)):",
          "line_number": 2,
          "column_number": 4,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "41108426": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41104797": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "41099054": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40975865": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40949440": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40924588": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40921455": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40912528": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif xaxis < 0 and yaxis > 0:",
          "line_number": 8,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif xaxis > 0 and yaxis < 0:",
          "line_number": 12,
          "column_number": 5,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "40905784": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40831564": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40821051": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40805343": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40800095": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40796568": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40769022": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40755074": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40750866": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40743299": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40709986": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40644112": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40614679": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40591974": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40540420": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40529605": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'i' from outer scope (line 12)",
          "line": "for i in numbers:",
          "line_number": 15,
          "column_number": 8,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "40522774": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40473938": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40459191": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40446287": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40412165": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40404921": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40402861": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40399967": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40383432": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40283498": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "40239894": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40204248": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40124323": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40119345": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40114459": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40105671": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40068374": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "40025161": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39998396": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39998393": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39992292": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39964892": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39953847": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39944877": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39926609": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39908313": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39879148": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39876402": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39859867": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39852508": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39823486": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39820249": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39807962": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39780849": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39747762": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39663311": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39616119": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39607623": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x < 0 and y > 0:",
          "line_number": 11,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "elif x > 0 and y < 0:",
          "line_number": 15,
          "column_number": 9,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "39554592": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39547742": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39509674": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39468579": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39451544": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39432640": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39406623": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39380568": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39373966": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39366344": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39358458": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39349523": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39347343": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39338804": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39253409": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39232653": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39159207": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39150767": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39126690": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39054019": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39052959": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "39006410": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38979500": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38954071": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38937609": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(int(num_inputs)):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "38916865": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38811293": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38760926": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38635610": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38544594": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38544424": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38449713": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38404948": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38391474": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38312472": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38249305": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38234636": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38223435": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38192595": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38174686": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38142299": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38141463": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38101284": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38079271": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38038856": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38033957": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "38018881": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37998471": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "C407",
          "text": "Unnecessary list comprehension - 'sum' can take a generator.",
          "line": "return sum([int(n) if start <= int(n) <= end else 0 for n in numbers])",
          "line_number": 1,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "37990304": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37990283": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "37976028": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0305",
          "text": "Trailing newlines",
          "line": "",
          "line_number": 9,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "37945707": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'num' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for num in range(num_of_values):",
          "line_number": 6,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "37824335": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37805169": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37785716": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37771806": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37761881": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37746450": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37706110": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37704768": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37698529": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37663121": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37658959": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37539437": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37515749": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37502930": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37501342": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37501301": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37498923": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37484138": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37481765": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37470818": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37470718": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0305",
          "text": "Trailing newlines",
          "line": "",
          "line_number": 7,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "37430403": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'n_' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for n_ in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "37423347": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37406217": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37405672": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37322415": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37312856": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37272159": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37260894": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37229960": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(number):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "37220773": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37171018": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37141169": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37136229": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37098025": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37041004": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37019341": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "37013196": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36991559": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36981660": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36956020": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36951967": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36756679": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36743727": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36742909": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36728572": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36709642": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36682111": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36675498": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36628666": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36615496": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36603865": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0326",
          "text": "Exactly one space required after assignment",
          "line": "input_numbers =  list(map(int, input().split()))",
          "line_number": 9,
          "column_number": 14,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "36595926": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36590226": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36566154": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36546594": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36514526": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(int(input())):",
          "line_number": 1,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "36501236": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36483782": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36474430": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36473917": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36468387": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36449739": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36433297": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(k):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "36425505": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36420611": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36413071": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36400830": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36400675": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(numbers):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "36334885": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36324908": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36323389": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36219193": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "36209715": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36156211": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36082565": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36080479": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "36045135": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35972294": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35947877": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35936630": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(lines):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "35927215": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(length):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "35916894": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35910565": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35879360": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35862881": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35859417": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35852128": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35814776": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35750605": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35669678": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35668998": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35666279": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35665403": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "C407",
          "text": "Unnecessary list comprehension - 'sum' can take a generator.",
          "line": "print(sum([int(input()) for _ in range(count)]) / count)",
          "line_number": 1,
          "column_number": 6,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "35651267": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35611907": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "35476460": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35451035": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35435166": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35412343": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35410337": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35378116": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35342369": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35253716": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35226505": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35198394": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35156350": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 5,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "35150515": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(lkm):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "35109841": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35097397": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35097304": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(lines_count):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "W0311",
          "text": "Bad indentation. Found 8 spaces, expected 4",
          "line": "name_list.append(input().split())",
          "line_number": 4,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "35075560": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35073560": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35047904": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "35007864": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34990679": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34986025": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34963285": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34955931": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34953216": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34902059": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34884722": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34883805": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34883283": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(repeat_time):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "34852814": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34837554": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34826259": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34796455": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34781223": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34661596": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34599008": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34581587": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0200",
          "text": "Consider using enumerate instead of iterating with range and len",
          "line": "for i in range(len(numbers)):",
          "line_number": 3,
          "column_number": 4,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "34558501": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34556945": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34544318": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34542103": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34538311": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34529783": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(a):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "34520452": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34488760": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(1, (lines + 1)):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "34426900": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34405550": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if start <= n and n <= end:",
          "line_number": 3,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "34386926": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34377686": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34360273": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34295857": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34293689": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34281984": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34274311": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34243000": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34226024": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34147250": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34104390": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34095733": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34045184": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34040905": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34025245": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "34008895": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33915720": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33806343": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33788246": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33726297": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33703174": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33691192": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33688397": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33662137": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33580587": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33564802": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33488339": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33480124": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33462044": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n + 1):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(float(sum(total)/n))",
          "line_number": 6,
          "column_number": 30,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "33408982": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33378515": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33378284": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33369325": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33335697": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33326460": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33322150": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33284887": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33249454": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33228429": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0613",
          "text": "Unused argument 'start'",
          "line": "def range_sum(numbers, start, end):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "W0613",
          "text": "Unused argument 'end'",
          "line": "def range_sum(numbers, start, end):",
          "line_number": 0,
          "column_number": 30,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if num <= b and num >= a:",
          "line_number": 4,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "33183248": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33178562": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33158299": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33158275": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(Counter):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "33133024": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33118589": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0121",
          "text": "Comparison to True should be just 'expr'",
          "line": "if name.endswith(\"win\") == True:",
          "line_number": 5,
          "column_number": 7,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0121",
          "text": "Comparison to True should be just 'expr'",
          "line": "elif name.endswith(\"loss\") == True:",
          "line_number": 7,
          "column_number": 9,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "33110619": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33110208": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33098119": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33090798": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'n' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for n in range(lines):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0200",
          "text": "Consider using enumerate instead of iterating with range and len",
          "line": "for n in range(len(players)):",
          "line_number": 5,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "33086964": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "33062685": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 11)",
          "line": "def range_sum(numbers, start, end):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0200",
          "text": "Consider using enumerate instead of iterating with range and len",
          "line": "for i in range(len(numbers)):  # Look all numbers in list by index",
          "line_number": 2,
          "column_number": 4,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "33015683": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32944782": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32907240": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32900332": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32855602": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32837086": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32803245": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32763471": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32722932": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "E741",
          "text": "ambiguous variable name 'l'",
          "line": "l = []",
          "line_number": 0,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(0, n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "32653151": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32620509": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32620231": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32598366": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32485058": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32453731": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32453420": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32434087": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32395784": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32389382": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32388047": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32266351": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32240671": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32229767": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32193032": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32181792": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32163529": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32155930": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32143920": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32115391": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32077954": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32072221": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32023900": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "32019293": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31988548": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31982645": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31962812": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31954946": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31953823": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31882300": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31824250": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31817054": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31772800": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'n' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for n in w_or_l:",
          "line_number": 4,
          "column_number": 8,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "31733383": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31674710": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31666777": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31666253": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31659030": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31641944": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31636051": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31622544": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31601862": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31585957": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31563315": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31561447": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31537456": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31537029": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31536948": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31536716": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(count):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "31523065": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'fim'",
          "line": "fim = int(end)",
          "line_number": 3,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if num >= com and num <= fim:",
          "line_number": 7,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'fim'",
          "line": "if num >= com and num <= fim:",
          "line_number": 7,
          "column_number": 33,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "input_numbers =  list(input().split())",
          "line_number": 13,
          "column_number": 15,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "a, b =  input().split()",
          "line_number": 14,
          "column_number": 6,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "31510434": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31482004": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31449191": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31446901": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31435148": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31359622": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31327349": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if num >= start and num <= end:",
          "line_number": 3,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "31317273": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31314086": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if (number >= int(start)) and (number <= int(end)):",
          "line_number": 4,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "31304513": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS503",
          "text": "Found useless returning `else` statement",
          "line": "for i in numbers:",
          "line_number": 5,
          "column_number": 8,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "31294628": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31286844": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31275332": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31274357": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS434",
          "text": "Found reassigning variable to itself: a",
          "line": "a, b = a, b = [int(x) for x in input().split()]",
          "line_number": 5,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS434",
          "text": "Found reassigning variable to itself: b",
          "line": "a, b = a, b = [int(x) for x in input().split()]",
          "line_number": 5,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "31200061": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31198414": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31170483": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'suma'",
          "line": "suma = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS504",
          "text": "Found negated condition",
          "line": "if not numbers:",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS503",
          "text": "Found useless returning `else` statement",
          "line": "for number in numbers:",
          "line_number": 5,
          "column_number": 8,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'suma'",
          "line": "suma += number",
          "line_number": 7,
          "column_number": 16,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'suma'",
          "line": "return suma",
          "line_number": 8,
          "column_number": 15,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "31167828": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31163354": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31121295": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31101006": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31100394": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31093463": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31084214": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31084172": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS331",
          "text": "Found variables that are only used for `return`: total",
          "line": "return total",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R504",
          "text": "you shouldn`t assign value to variable if it will be use only as return value",
          "line": "return total",
          "line_number": 3,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "31050999": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "31048603": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS350",
          "text": "Found usable augmented assign pattern",
          "line": "sum_num = sum_num + i",
          "line_number": 4,
          "column_number": 12,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "31034981": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS331",
          "text": "Found variables that are only used for `return`: total_sum",
          "line": "return total_sum",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R504",
          "text": "you shouldn`t assign value to variable if it will be use only as return value",
          "line": "return total_sum",
          "line_number": 2,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30993137": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30931971": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30870815": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for i in range(start, end + 1):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30844481": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30808485": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "WPS122",
          "text": "Found all unused variables definition: _sum",
          "line": "_sum = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS121",
          "text": "Found usage of a variable marked as unused: _sum",
          "line": "_sum += i",
          "line_number": 4,
          "column_number": 12,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS121",
          "text": "Found usage of a variable marked as unused: _sum",
          "line": "return _sum",
          "line_number": 5,
          "column_number": 11,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30728377": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30724249": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30695227": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30689747": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30670658": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30664100": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'acc'",
          "line": "acc = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'acc'",
          "line": "acc = acc + num",
          "line_number": 4,
          "column_number": 12,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'acc'",
          "line": "acc = acc + num",
          "line_number": 4,
          "column_number": 18,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS350",
          "text": "Found usable augmented assign pattern",
          "line": "acc = acc + num",
          "line_number": 4,
          "column_number": 12,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'acc'",
          "line": "return acc",
          "line_number": 5,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30618522": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30584777": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30584709": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'twonumbers'",
          "line": "twonumbers = input().split(' ')",
          "line_number": 9,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'twonumbers'",
          "line": "a, b = int(twonumbers[0]), int(twonumbers[1])",
          "line_number": 10,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'twonumbers'",
          "line": "a, b = int(twonumbers[0]), int(twonumbers[1])",
          "line_number": 10,
          "column_number": 31,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30576660": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30561342": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30558756": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS345",
          "text": "Found meaningless number operation",
          "line": "sum_ += 0",
          "line_number": 6,
          "column_number": 20,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30494530": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30474305": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30452244": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30436352": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30434874": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30404354": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ += number",
          "line_number": 4,
          "column_number": 12,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "return summ",
          "line_number": 5,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30394001": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS507",
          "text": "Found useless `len()` compare",
          "line": "return sum(int(number) for number in numbers if int(start) <= int(number) <= int(end)) if len(numbers) > 0 else 0",
          "line_number": 1,
          "column_number": 94,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30365054": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30341277": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30276697": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30272142": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30231917": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30185672": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS345",
          "text": "Found meaningless number operation",
          "line": "d = [int(x) for x in input_numbers if int(x) % 1 == 0 and x != ' ']",
          "line_number": 6,
          "column_number": 47,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30139785": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS334",
          "text": "Found reversed complex comparison",
          "line": "return sum(num for num in numbers if end >= num >= start)",
          "line_number": 1,
          "column_number": 41,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30133287": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30133139": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS331",
          "text": "Found variables that are only used for `return`: total",
          "line": "return total",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "R504",
          "text": "you shouldn`t assign value to variable if it will be use only as return value",
          "line": "return total",
          "line_number": 2,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "30130873": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30125812": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30105411": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30087478": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30037946": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30015685": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "30005966": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29996263": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'line' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for line in range(nr_lines):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "29970048": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS307",
          "text": "Found list comprehension with multiple `if`s",
          "line": "return sum(x for x in numbers if x >= start if x <= end)",
          "line_number": 3,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "29964975": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS334",
          "text": "Found reversed complex comparison",
          "line": "return sum(x for x in numbers if end >= x >= start)",
          "line_number": 1,
          "column_number": 37,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "29953398": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29946121": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(1, n + 1):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(sum(total)/n)",
          "line_number": 5,
          "column_number": 16,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "29904597": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29867841": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29823889": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29813262": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29740557": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29736511": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29719539": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29700166": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29680979": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29657836": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29625408": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29605340": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29592421": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29562793": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29556806": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29551083": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(float(x/a))",
          "line_number": 6,
          "column_number": 13,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "29473241": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29435805": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29377451": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29266366": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29247387": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29245753": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29182986": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29165648": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29103388": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS350",
          "text": "Found usable augmented assign pattern",
          "line": "count = count + i",
          "line_number": 4,
          "column_number": 12,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "29101509": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'num' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for num in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "29086751": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "29062495": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28992316": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28989368": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sum1'",
          "line": "sum1 = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sum1'",
          "line": "sum1 += num",
          "line_number": 9,
          "column_number": 12,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sum1'",
          "line": "sum1 += 0",
          "line_number": 11,
          "column_number": 12,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS345",
          "text": "Found meaningless number operation",
          "line": "sum1 += 0",
          "line_number": 11,
          "column_number": 20,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sum1'",
          "line": "return sum1",
          "line_number": 12,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "28945726": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28931140": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28929104": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS333",
          "text": "Found implicit complex compare",
          "line": "if int(x) >= int(start) and int(x) <= int(end):",
          "line_number": 3,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "28868655": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'n_lines' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for n_lines in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "28859080": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28836390": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(no):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "28800394": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28779726": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "28765145": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28754618": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28699729": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28664367": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28660319": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28625744": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28610204": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28549571": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28545147": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28525987": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28514899": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28477014": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28470234": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(values):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "28460991": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28453567": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28437565": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28429465": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS333",
          "text": "Found implicit complex compare",
          "line": "if int(x) >= start and int(x) <= end:",
          "line_number": 3,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "28383733": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28358138": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28332071": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28313029": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28293186": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28264606": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28226616": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28217115": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28138278": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28119586": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28074609": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28048159": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28046644": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28039718": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28038685": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for i in numbers:",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "28037866": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28004409": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "28003929": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27979251": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(num):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "27973961": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27968509": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(0, line_number):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "27937649": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27936996": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27927022": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27878452": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27876289": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27841907": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27836584": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27834551": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27828549": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27812067": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27805273": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27709420": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27655873": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'player' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for player in range(games):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "27639010": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27637507": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27612975": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27586543": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27571187": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27556808": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27510599": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if i >= start and i <= end:",
          "line_number": 3,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "27489030": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27438963": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27427012": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27332893": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27316967": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27264100": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27261386": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27187533": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27183830": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "W0622",
          "text": "Redefining built-in 'sum'",
          "line": "sum = 0",
          "line_number": 1,
          "column_number": 0,
          "category": "ERROR_PRONE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "27149957": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27127867": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27116181": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27091687": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27088324": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27055449": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(num):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "27033802": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "27022465": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0311",
          "text": "Bad indentation. Found 6 spaces, expected 8",
          "line": "n = int(input())",
          "line_number": 10,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "26998169": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26957170": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26955453": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26947233": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26923158": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26917530": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(counter):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E265",
          "text": "block comment should start with '# '",
          "line": "#print(names_result_list)",
          "line_number": 4,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0326",
          "text": "No space allowed before bracket",
          "line": "for i in range (counter):",
          "line_number": 7,
          "column_number": 15,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range (counter):",
          "line_number": 7,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E265",
          "text": "block comment should start with '# '",
          "line": "#print(matrix)",
          "line_number": 9,
          "column_number": 4,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E265",
          "text": "block comment should start with '# '",
          "line": "#print(matrix)",
          "line_number": 12,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0326",
          "text": "No space allowed after bracket",
          "line": "list = [ x for y in names_result_list for x in y.split()]",
          "line_number": 13,
          "column_number": 7,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "W0622",
          "text": "Redefining built-in 'list'",
          "line": "list = [ x for y in names_result_list for x in y.split()]",
          "line_number": 13,
          "column_number": 0,
          "category": "ERROR_PRONE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E265",
          "text": "block comment should start with '# '",
          "line": "#print(output)",
          "line_number": 27,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0326",
          "text": "Exactly one space required after comparison",
          "line": "penultimate = [names.split() for [names] in output if names.split()[1] ==\"win\"]",
          "line_number": 28,
          "column_number": 71,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0326",
          "text": "Exactly one space required after comma",
          "line": "print([name for [name,victory] in penultimate])",
          "line_number": 29,
          "column_number": 21,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "26914252": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26913923": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26897566": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26885529": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26813588": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26809211": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26802795": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26795448": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26770998": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(1, n + 1):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "26740016": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "E741",
          "text": "ambiguous variable name 'l'",
          "line": "l = []",
          "line_number": 1,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(0, b):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "26707049": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26703332": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26699253": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26694946": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for val in [x for x in numbers if start <= x <= end]:",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "26642012": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26619743": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26604812": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26576221": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26574436": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'numbers' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for numbers in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "26559223": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26544598": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "W0622",
          "text": "Redefining built-in 'sum'",
          "line": "sum = 0",
          "line_number": 1,
          "column_number": 0,
          "category": "ERROR_PRONE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "A001",
          "text": "variable \"sum\" is shadowing a python builtin",
          "line": "sum = sum + int(input())",
          "line_number": 3,
          "column_number": 4,
          "category": "ERROR_PRONE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "26527674": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26526868": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26513720": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1721",
          "text": "Unnecessary use of a comprehension",
          "line": "mylist.append([a_list for a_list in input().split()])",
          "line_number": 3,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "26511379": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26494970": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26451046": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(number_of_lines):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "arithmetic_mean = (addition/mean)",
          "line_number": 10,
          "column_number": 27,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "26434941": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "W0622",
          "text": "Redefining built-in 'sum'",
          "line": "sum = 0",
          "line_number": 1,
          "column_number": 0,
          "category": "ERROR_PRONE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "26433578": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26426088": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26413942": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26389123": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26341993": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26328558": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "26307038": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26306392": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26285361": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26284812": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26284311": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26235894": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26204265": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS507",
          "text": "Found useless `len()` compare",
          "line": "if len(j) == 0:",
          "line_number": 3,
          "column_number": 7,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS503",
          "text": "Found useless returning `else` statement",
          "line": "return sum(j)",
          "line_number": 6,
          "column_number": 8,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "26170471": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26169602": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26091421": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26026880": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26016254": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26011860": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "26008269": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS345",
          "text": "Found meaningless number operation",
          "line": "return 0 + sum(num for num in numbers if start <= num <= end)",
          "line_number": 1,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "25989526": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25928551": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'acc'",
          "line": "acc = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'acc'",
          "line": "acc += int(i)",
          "line_number": 4,
          "column_number": 12,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'acc'",
          "line": "return acc",
          "line_number": 5,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "25923283": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25906281": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25898749": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25896602": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25865728": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS229",
          "text": "Found too long ``try`` body length: 4 > 1",
          "line": "try:",
          "line_number": 0,
          "column_number": 0,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "25790817": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25769127": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0326",
          "text": "No space allowed before bracket",
          "line": "for i in range (n):",
          "line_number": 2,
          "column_number": 15,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range (n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "25676462": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25674208": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25653545": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(mean/n)",
          "line_number": 9,
          "column_number": 10,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "25646767": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25627443": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25573576": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25571899": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25561699": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25535934": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25522394": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25496204": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25488169": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25481656": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "return sum([x for x in numbers if x >= start and x <= end])",
          "line_number": 1,
          "column_number": 38,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "25468626": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25444620": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25413969": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "25411843": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25382554": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25359686": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25357589": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25354187": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25265804": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25236879": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS504",
          "text": "Found negated condition",
          "line": "if not numbers:",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ = 0",
          "line_number": 5,
          "column_number": 8,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ += i",
          "line_number": 9,
          "column_number": 16,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "return summ",
          "line_number": 10,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "25223435": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "WPS334",
          "text": "Found reversed complex comparison",
          "line": "return sum(x for x in numbers if int(end) >= x >= int(start)) if [x for x in numbers if int(end) >= x >= int(start)] else 0",
          "line_number": 1,
          "column_number": 37,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS334",
          "text": "Found reversed complex comparison",
          "line": "return sum(x for x in numbers if int(end) >= x >= int(start)) if [x for x in numbers if int(end) >= x >= int(start)] else 0",
          "line_number": 1,
          "column_number": 92,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E501",
          "text": "Too long line. Try to split it into smaller lines. It will make your code easy to understand.",
          "line": "return sum(x for x in numbers if int(end) >= x >= int(start)) if [x for x in numbers if int(end) >= x >= int(start)] else 0",
          "line_number": 1,
          "column_number": 120,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "25220002": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25208247": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25154004": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25113727": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25110687": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS333",
          "text": "Found implicit complex compare",
          "line": "if int(i) >= int(start) and int(i) <= int(end):",
          "line_number": 3,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "25052129": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25031734": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25030007": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25029639": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25012519": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "25003440": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24963616": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24938899": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC100",
          "text": "Possibly misspelt word: 'EOF'",
          "line": "#  Couldn't figure out how to one line it, in theory this should work, but it has an EOF error.",
          "line_number": 7,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "24934548": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24886497": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24882484": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24846410": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24844615": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24810754": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'number' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for number in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "24785361": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24750870": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24743131": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24742370": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24731357": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "24722647": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24716970": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24708272": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24664180": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24657639": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24646894": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24617496": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0613",
          "text": "Unused argument 'start'",
          "line": "def range_sum(numbers, start, end):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0613",
          "text": "Unused argument 'end'",
          "line": "def range_sum(numbers, start, end):",
          "line_number": 0,
          "column_number": 30,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS333",
          "text": "Found implicit complex compare",
          "line": "if int(num) >= int(a) and int(num) <= int(b):",
          "line_number": 3,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "input_numbers =  input().split()",
          "line_number": 8,
          "column_number": 15,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "24602688": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24577713": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24489729": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24467763": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'leng'",
          "line": "count, leng = 0, len(numbers)",
          "line_number": 2,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'leng'",
          "line": "for i in range(leng):",
          "line_number": 3,
          "column_number": 19,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "24463657": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24419350": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24418023": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24416791": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24383897": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24377630": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24322112": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24314971": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24263935": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24263864": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24256704": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24212569": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24210033": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(0, n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "24200771": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24174775": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24150993": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24150854": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sl'",
          "line": "sl = [i if start <= i <= end else 0 for i in numbers]",
          "line_number": 4,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sl'",
          "line": "return sum(sl)",
          "line_number": 6,
          "column_number": 15,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "24138121": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24124838": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "C0326",
          "text": "Exactly one space required around assignment",
          "line": "n=int(input())",
          "line_number": 0,
          "column_number": 1,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0326",
          "text": "Exactly one space required around assignment",
          "line": "players=[input() for i in range(n)]",
          "line_number": 1,
          "column_number": 7,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0326",
          "text": "Exactly one space required around assignment",
          "line": "winners=[winner.split()[0] for winner in players if winner.endswith(\"win\")]",
          "line_number": 2,
          "column_number": 7,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "24037481": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24013784": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24012052": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(a):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "24010181": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "24003959": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23968866": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23957028": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23939060": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23920784": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23896079": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23889453": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "23861372": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23841953": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23832114": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23821994": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23741374": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23730396": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23712374": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23710447": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23662232": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23650536": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23630707": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23613704": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23574860": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23548730": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23517454": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23451125": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23447641": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23440642": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23434859": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23419928": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23379439": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23373695": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23325113": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "23300714": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "W0622",
          "text": "Redefining built-in 'sum'",
          "line": "sum = 0",
          "line_number": 0,
          "column_number": 0,
          "category": "ERROR_PRONE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "23289755": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "23287975": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23272277": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23255700": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23254058": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23253780": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23139883": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23095050": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "W0621",
          "text": "Redefining name 'i' from outer scope (line 4)",
          "line": "def sum_of_list(i):",
          "line_number": 6,
          "column_number": 16,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "23073762": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23071629": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23062008": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23054814": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23040491": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23018510": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "23014943": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if i <= end and i >= start:",
          "line_number": 3,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "a, b =  list(map(int, input().split()))",
          "line_number": 9,
          "column_number": 6,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "23004789": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22950276": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22919320": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22907887": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22902383": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22895696": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22893762": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22874521": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22859560": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22813213": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22803177": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22778111": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22741365": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22688136": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22684167": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22679620": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22648141": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22633601": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22629887": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22629734": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(times):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "22629499": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(times):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0305",
          "text": "Trailing newlines",
          "line": "",
          "line_number": 7,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "22569203": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "W0622",
          "text": "Redefining built-in 'all'",
          "line": "all = []",
          "line_number": 1,
          "column_number": 0,
          "category": "ERROR_PRONE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(float(sum(all)/n))",
          "line_number": 5,
          "column_number": 20,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "22550814": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22535842": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22481598": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22278963": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22254287": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22251389": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22241576": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "22164369": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22157196": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22075094": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "WPS122",
          "text": "Found all unused variables definition: _sum",
          "line": "_sum = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS121",
          "text": "Found usage of a variable marked as unused: _sum",
          "line": "_sum += num",
          "line_number": 4,
          "column_number": 12,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS121",
          "text": "Found usage of a variable marked as unused: _sum",
          "line": "return _sum",
          "line_number": 5,
          "column_number": 11,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "22071630": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22069356": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "22059991": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "input_numbers =  list(map(int, input().split()))",
          "line_number": 0,
          "column_number": 15,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "range_int_list =  list(map(int, input().split()))",
          "line_number": 1,
          "column_number": 16,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'input_numbers' from outer scope (line 1)",
          "line": "def range_sum(input_numbers, start, end):",
          "line_number": 5,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0613",
          "text": "Unused argument 'start'",
          "line": "def range_sum(input_numbers, start, end):",
          "line_number": 5,
          "column_number": 29,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0613",
          "text": "Unused argument 'end'",
          "line": "def range_sum(input_numbers, start, end):",
          "line_number": 5,
          "column_number": 36,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS442",
          "text": "Found outer scope names shadowing: input_numbers",
          "line": "def range_sum(input_numbers, start, end):",
          "line_number": 5,
          "column_number": 14,
          "category": "ERROR_PRONE",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "if i >= a and i <= b:",
          "line_number": 8,
          "column_number": 11,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "22057553": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21944007": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'ask' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for ask in range(total_ask):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "21894734": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "R1716",
          "text": "Simplify chained comparison between the operands",
          "line": "return sum([num if num >= start and num <= end else 0 for num in numbers])",
          "line_number": 2,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "21814921": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21802261": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21766926": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21739392": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21737288": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21721436": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21717513": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21710802": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21614485": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21489721": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21456261": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21437947": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "21433776": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21427106": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21328983": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21321225": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(number_of_lines):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "21290656": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21262646": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "21250678": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21185839": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21175717": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21165490": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS507",
          "text": "Found useless `len()` compare",
          "line": "if len(numbers) == 0:",
          "line_number": 1,
          "column_number": 7,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "21161503": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21159680": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21092741": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "21074591": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "E271",
          "text": "multiple spaces after keyword",
          "line": "lst = [input().split(' ') for i in  range(a)]",
          "line_number": 2,
          "column_number": 34,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "20986003": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "20985321": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20916213": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20902119": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20895888": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20895229": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20815822": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'inpuk'",
          "line": "def range_sum(inpuk, start, end):",
          "line_number": 0,
          "column_number": 14,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'inpuk'",
          "line": "return sum([int(el) for el in inpuk if int(start) <= int(el) <= int(end)])",
          "line_number": 1,
          "column_number": 34,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "20752398": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20730912": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20679432": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20582325": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20579984": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberss'",
          "line": "numberss = list(map(int, input().split(' ')))",
          "line_number": 4,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberss'",
          "line": "print(range_sum(numberss, aa, bb))",
          "line_number": 6,
          "column_number": 16,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "20505388": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(int(input())):",
          "line_number": 1,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "20485060": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'accum'",
          "line": "accum = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for num in _numbers:",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'accum'",
          "line": "accum += num if _a <= num <= _b else 0",
          "line_number": 3,
          "column_number": 8,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'accum'",
          "line": "return accum",
          "line_number": 4,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "20465552": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20408805": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20373098": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 9)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 10)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 10)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sum1'",
          "line": "sum1 = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "if int(a)<=int(i)<=int(b):",
          "line_number": 3,
          "column_number": 17,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "if int(a)<=int(i)<=int(b):",
          "line_number": 3,
          "column_number": 25,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sum1'",
          "line": "sum1 += int(i)",
          "line_number": 4,
          "column_number": 12,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sum1'",
          "line": "return sum1",
          "line_number": 5,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "numbers =  input().split(\" \")",
          "line_number": 8,
          "column_number": 9,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "a, b =  input().split()",
          "line_number": 9,
          "column_number": 6,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "20334821": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberss'",
          "line": "def range_sum(numberss, aa, bb):",
          "line_number": 0,
          "column_number": 14,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberss'",
          "line": "filter(lambda x: aa <= x <= bb, numberss)",
          "line_number": 2,
          "column_number": 40,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "C812",
          "text": "missing trailing comma",
          "line": "filter(lambda x: aa <= x <= bb, numberss)",
          "line_number": 2,
          "column_number": 49,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "20313267": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 5)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 6)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 6)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "20291529": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20285018": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20261536": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20212888": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20172823": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20162426": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20025264": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20024069": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20022686": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "20019726": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19911877": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19904690": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19886476": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19818389": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19761086": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19747799": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19667233": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19622788": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19620814": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(a):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "19611637": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19596083": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19571249": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19496112": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19492506": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19453695": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19369142": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19351440": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19326872": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19277686": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19242650": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19204940": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19160475": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'range1'",
          "line": "def range_sum(integers, range1, range2):",
          "line_number": 0,
          "column_number": 24,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'range2'",
          "line": "def range_sum(integers, range1, range2):",
          "line_number": 0,
          "column_number": 32,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'range1'",
          "line": "if range1 <= integer <= range2:",
          "line_number": 3,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'range2'",
          "line": "if range1 <= integer <= range2:",
          "line_number": 3,
          "column_number": 32,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "19130445": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19064608": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "19064235": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 9)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 10)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 10)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "A001",
          "text": "variable \"sum\" is shadowing a python builtin",
          "line": "sum = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "ERROR_PRONE",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "19018743": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18981933": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18961821": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18952126": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18871250": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18863295": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18805113": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18754078": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18702882": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18698484": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(number_competitors):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "18659106": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18633303": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18600388": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18559634": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 6)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 9)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 9)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "C0325",
          "text": "Unnecessary parens after 'if' keyword",
          "line": "nums = [n for n in numbers if (a <= n <= b)]",
          "line_number": 1,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "C0200",
          "text": "Consider using enumerate instead of iterating with range and len",
          "line": "for i in range(len(numbers)):",
          "line_number": 6,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "18559035": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 6)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 9)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 9)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "C0325",
          "text": "Unnecessary parens after 'if' keyword",
          "line": "nums = [n for n in numbers if (a <= n <= b)]",
          "line_number": 1,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "C0200",
          "text": "Consider using enumerate instead of iterating with range and len",
          "line": "for i in range(len(numbers)):",
          "line_number": 6,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E265",
          "text": "block comment should start with '# '",
          "line": "#print(numbers)",
          "line_number": 11,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E265",
          "text": "block comment should start with '# '",
          "line": "#print()",
          "line_number": 12,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "C0305",
          "text": "Trailing newlines",
          "line": "",
          "line_number": 15,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "18556971": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18546097": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18545206": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18535674": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18457742": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18445112": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18385337": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18339336": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18338954": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numbers1'",
          "line": "def range_sum(numbers1, x, y):",
          "line_number": 0,
          "column_number": 14,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sum1'",
          "line": "sum1 = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numbers1'",
          "line": "for i in numbers1:",
          "line_number": 2,
          "column_number": 13,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sum1'",
          "line": "sum1 += i",
          "line_number": 4,
          "column_number": 12,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'sum1'",
          "line": "return sum1",
          "line_number": 5,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "18330934": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18324110": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18313336": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(sum(my_list)/len(my_list))",
          "line_number": 4,
          "column_number": 18,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "18235023": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18171514": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18107576": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18107401": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(total/cnt)",
          "line_number": 9,
          "column_number": 11,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "18051318": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18014742": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "18002117": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17983923": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17967006": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17938763": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17934006": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17864329": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17840918": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17790874": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17749175": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17736743": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 15)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 16)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 16)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS504",
          "text": "Found negated condition",
          "line": "if sum(tmp) != 0:",
          "line_number": 7,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS503",
          "text": "Found useless returning `else` statement",
          "line": "return 0",
          "line_number": 10,
          "column_number": 8,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "17691995": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17658623": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17644527": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17612838": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17569967": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17556660": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17430882": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17348336": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17141509": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17060485": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "17023745": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16924885": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16904867": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16776492": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: numbers_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 14,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: a_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 24,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: b_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 28,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "16668238": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 11)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 12)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 12)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'boi'",
          "line": "sum_boi = 0",
          "line_number": 1,
          "column_number": 8,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'boi'",
          "line": "sum_boi += i",
          "line_number": 5,
          "column_number": 16,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'boi'",
          "line": "return sum_boi",
          "line_number": 7,
          "column_number": 15,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "16564481": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16444030": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'n1'",
          "line": "def range_sum(nums, n1, n2):",
          "line_number": 0,
          "column_number": 20,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'n2'",
          "line": "def range_sum(nums, n1, n2):",
          "line_number": 0,
          "column_number": 24,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'n1'",
          "line": "return sum(i for i in map(int, nums.split()) if int(n1) <= i <= int(n2))",
          "line_number": 1,
          "column_number": 56,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'n2'",
          "line": "return sum(i for i in map(int, nums.split()) if int(n1) <= i <= int(n2))",
          "line_number": 1,
          "column_number": 72,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "16362369": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16352564": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16301255": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16294800": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16234642": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16187477": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16158314": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(int(a)):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0200",
          "text": "Consider using enumerate instead of iterating with range and len",
          "line": "for x in range(len(split_of_list_games)):",
          "line_number": 9,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "16044938": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "16003706": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15922738": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS334",
          "text": "Found reversed complex comparison",
          "line": "return sum(x for x in nums if upper >= x >= lower)",
          "line_number": 1,
          "column_number": 34,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "15696993": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15694522": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15518848": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15453597": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15406195": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15405993": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberlist'",
          "line": "def range_sum(numberlist, minimum, maximum):",
          "line_number": 0,
          "column_number": 14,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberlist'",
          "line": "for num in numberlist:",
          "line_number": 2,
          "column_number": 15,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "15392392": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15363052": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15323017": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15153036": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15146900": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15122311": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15107771": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15107377": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15090300": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15056483": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "15051161": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14976785": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14969350": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14728191": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14726511": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 5)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 6)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 6)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "14711724": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 9)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 10)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 10)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "14650807": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14599342": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14581546": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14579430": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14489122": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14457523": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14457114": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14425665": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(lines):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "14280685": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14252315": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14227653": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14223369": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14216091": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14145811": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14126972": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14083419": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "14008410": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13972915": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13952469": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13843912": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13788322": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13745791": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "C0326",
          "text": "Exactly one space required after comma",
          "line": "for i in range(0,n):",
          "line_number": 2,
          "column_number": 16,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(0,n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "13709346": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13676089": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13522557": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13369582": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13326304": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13229297": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13212063": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13171718": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13100854": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13098641": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "13075310": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 11)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 12)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 12)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "13014190": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12966052": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12943712": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12929743": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 5)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 6)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 6)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "return sum(i for i in numbers if i in range(a, b+1))",
          "line_number": 1,
          "column_number": 52,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "12921388": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ += num",
          "line_number": 4,
          "column_number": 12,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "return summ",
          "line_number": 5,
          "column_number": 11,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberss'",
          "line": "numberss = input()",
          "line_number": 7,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'a1'",
          "line": "a1, b1 = input().split()",
          "line_number": 8,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'b1'",
          "line": "a1, b1 = input().split()",
          "line_number": 8,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberss'",
          "line": "numberss = [int(x) for x in numberss.split()]",
          "line_number": 9,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberss'",
          "line": "numberss = [int(x) for x in numberss.split()]",
          "line_number": 9,
          "column_number": 28,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'a1'",
          "line": "a1 = int(a1)",
          "line_number": 10,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'a1'",
          "line": "a1 = int(a1)",
          "line_number": 10,
          "column_number": 9,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'b1'",
          "line": "b1 = int(b1)",
          "line_number": 11,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'b1'",
          "line": "b1 = int(b1)",
          "line_number": 11,
          "column_number": 9,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberss'",
          "line": "print(range_sum(numberss, a1, b1))",
          "line_number": 12,
          "column_number": 16,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'a1'",
          "line": "print(range_sum(numberss, a1, b1))",
          "line_number": 12,
          "column_number": 26,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'b1'",
          "line": "print(range_sum(numberss, a1, b1))",
          "line_number": 12,
          "column_number": 30,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "12887063": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12875664": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12805181": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12764233": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12726295": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12542633": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12534580": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12522056": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12374218": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12340798": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12252293": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12225771": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12203485": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(user_input):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "12183370": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberlist'",
          "line": "def range_sum(numberlist, min_value, max_value):",
          "line_number": 0,
          "column_number": 14,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numberlist'",
          "line": "for num in numberlist:",
          "line_number": 2,
          "column_number": 15,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "12161002": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 9)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 10)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 10)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "12148932": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12062790": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "12016480": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: numbers_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 14,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: a_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 24,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: b_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 28,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "12016056": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 11)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 12)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 12)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS229",
          "text": "Found too long ``try`` body length: 2 > 1",
          "line": "try:",
          "line_number": 2,
          "column_number": 4,
          "category": "COMPLEXITY",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "C0200",
          "text": "Consider using enumerate instead of iterating with range and len",
          "line": "for i in range(0, len(numbers)):",
          "line_number": 3,
          "column_number": 8,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0702",
          "text": "No exception type(s) specified",
          "line": "except:",
          "line_number": 7,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E722",
          "text": "do not use bare 'except'",
          "line": "except:",
          "line_number": 7,
          "column_number": 4,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "numbers =  [int(x) for x in input().split(' ')]",
          "line_number": 10,
          "column_number": 9,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "a, b =  input().split(' ')",
          "line_number": 11,
          "column_number": 6,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "12013820": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11998441": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "W0311",
          "text": "Bad indentation. Found 5 spaces, expected 8",
          "line": "winners.append(a[0])",
          "line_number": 5,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "11640879": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11640351": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11495833": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11448926": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11318636": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11280464": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11272895": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11261612": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11219185": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11211052": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11179996": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numbersz'",
          "line": "def range_sum(numbersz, az, bz):",
          "line_number": 0,
          "column_number": 14,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'bz'",
          "line": "def range_sum(numbersz, az, bz):",
          "line_number": 0,
          "column_number": 28,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'numbersz'",
          "line": "return sum(number for number in numbersz if az <= number <= bz)",
          "line_number": 1,
          "column_number": 36,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'bz'",
          "line": "return sum(number for number in numbersz if az <= number <= bz)",
          "line_number": 1,
          "column_number": 64,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "11109281": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "11034546": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "10957489": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "10942363": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "10692734": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "10649568": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ = 0",
          "line_number": 1,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS440",
          "text": "Found block variables overlap: i",
          "line": "i = int(input())",
          "line_number": 3,
          "column_number": 4,
          "category": "ERROR_PRONE",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "summ += i",
          "line_number": 4,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'summ'",
          "line": "print(summ / n)",
          "line_number": 5,
          "column_number": 6,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "10494947": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "10433297": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "10360313": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "10296304": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "10175679": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "E741",
          "text": "ambiguous variable name 'l'",
          "line": "l = []",
          "line_number": 1,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "10117563": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "10058895": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(num_lines):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "9931273": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "9816710": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "winners.append(result[0:len(result)-4])",
          "line_number": 6,
          "column_number": 43,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        },
        {
          "code": "C0305",
          "text": "Trailing newlines",
          "line": "",
          "line_number": 11,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": null,
          "influence_on_penalty": null
        }
      ]
    }
  },
  "9791125": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "9374114": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: numbers_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 14,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: a_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 24,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: b_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 28,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "9197692": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "9156663": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "WPS440",
          "text": "Found block variables overlap: a",
          "line": "a = int(input())",
          "line_number": 3,
          "column_number": 4,
          "category": "ERROR_PRONE",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "9080055": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _i in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS122",
          "text": "Found all unused variables definition: _i",
          "line": "for _i in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "8949097": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "8597823": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'list1'",
          "line": "list1 = []",
          "line_number": 2,
          "column_number": 0,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'list1'",
          "line": "list1.append(int(input()))",
          "line_number": 4,
          "column_number": 4,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'list1'",
          "line": "print(float(sum(list1) / len(list1)))",
          "line_number": 5,
          "column_number": 16,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "SC200",
          "text": "Possibly misspelt word: 'list1'",
          "line": "print(float(sum(list1) / len(list1)))",
          "line_number": 5,
          "column_number": 29,
          "category": "INFO",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "8487089": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "8429084": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 10)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 11)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 11)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "A001",
          "text": "variable \"sum\" is shadowing a python builtin",
          "line": "sum = 0",
          "line_number": 1,
          "column_number": 4,
          "category": "ERROR_PRONE",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "if x in range(int(a), int(b)+1):",
          "line_number": 3,
          "column_number": 36,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "numbers =  [int(x) for x in input().split(\" \")]",
          "line_number": 9,
          "column_number": 9,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E222",
          "text": "multiple spaces after operator",
          "line": "a, b =  input().split(\" \")",
          "line_number": 10,
          "column_number": 6,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "8394417": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for i in range(amount):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(amount):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "8188724": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS122",
          "text": "Found all unused variables definition: _i",
          "line": "for _i in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for number in numbers:",
          "line_number": 6,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "8127575": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS122",
          "text": "Found all unused variables definition: _i",
          "line": "for _i in range(num_n):",
          "line_number": 4,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for a in m_list:",
          "line_number": 7,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "7929185": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "WPS122",
          "text": "Found all unused variables definition: _number",
          "line": "for _number in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "7892532": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "A001",
          "text": "variable \"sum\" is shadowing a python builtin",
          "line": "sum = 0",
          "line_number": 3,
          "column_number": 0,
          "category": "ERROR_PRONE",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for i in range(how_many):",
          "line_number": 5,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(how_many):",
          "line_number": 5,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "7538685": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "WPS440",
          "text": "Found block variables overlap: x",
          "line": "x = float(input())",
          "line_number": 3,
          "column_number": 4,
          "category": "ERROR_PRONE",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "7538160": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for x in range(n):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(n):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(new/n)",
          "line_number": 5,
          "column_number": 9,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "7517964": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(sum(numbers)/n)",
          "line_number": 9,
          "column_number": 18,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "7509562": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(0, num):",
          "line_number": 3,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "7426696": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(n):",
          "line_number": 3,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "7269158": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for _ in range(numbers):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "6852680": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "n=int(input())",
          "line_number": 1,
          "column_number": 1,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "lst=[]",
          "line_number": 2,
          "column_number": 3,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E741",
          "text": "ambiguous variable name 'l'",
          "line": "l=int(input())",
          "line_number": 4,
          "column_number": 4,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E225",
          "text": "missing whitespace around operator",
          "line": "l=int(input())",
          "line_number": 4,
          "column_number": 5,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(sum(lst)/len(lst))",
          "line_number": 6,
          "column_number": 14,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "6710705": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "6578165": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: numbers_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 14,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: a_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 24,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS120",
          "text": "Found regular name with trailing underscore: b_",
          "line": "def range_sum(numbers_, a_, b_):",
          "line_number": 0,
          "column_number": 28,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "6190854": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "6186804": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for i in range(number_of_values):",
          "line_number": 4,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(number_of_values):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "6048781": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": []
    }
  },
  "5854644": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "MODERATE",
        "text": "Code quality (beta): MODERATE"
      },
      "errors": [
        {
          "code": "WPS122",
          "text": "Found all unused variables definition: _i",
          "line": "for _i in range(int(input())):",
          "line_number": 2,
          "column_number": 0,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "5839933": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for i in range(amount):",
          "line_number": 3,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(amount):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "5591723": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'x' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for x in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "5367150": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "A001",
          "text": "variable \"sum\" is shadowing a python builtin",
          "line": "sum = 0",
          "line_number": 1,
          "column_number": 0,
          "category": "ERROR_PRONE",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for i in range(a):",
          "line_number": 2,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(a):",
          "line_number": 2,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(sum/a)",
          "line_number": 4,
          "column_number": 9,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "5091489": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(number_values):",
          "line_number": 4,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "4865668": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "GOOD",
        "text": "Code quality (beta): GOOD"
      },
      "errors": [
        {
          "code": "W0621",
          "text": "Redefining name 'numbers' from outer scope (line 5)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 14,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'a' from outer scope (line 6)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 23,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "W0621",
          "text": "Redefining name 'b' from outer scope (line 6)",
          "line": "def range_sum(numbers, a, b):",
          "line_number": 0,
          "column_number": 26,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "4845817": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "BAD",
        "text": "Code quality (beta): BAD"
      },
      "errors": [
        {
          "code": "A001",
          "text": "variable \"sum\" is shadowing a python builtin",
          "line": "sum = 0",
          "line_number": 1,
          "column_number": 0,
          "category": "ERROR_PRONE",
          "difficulty": "HARD",
          "influence_on_penalty": 0
        },
        {
          "code": "WPS519",
          "text": "Found implicit `sum()` call",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 0,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(n):",
          "line_number": 3,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        },
        {
          "code": "E226",
          "text": "missing whitespace around arithmetic operator",
          "line": "print(sum/n)",
          "line_number": 5,
          "column_number": 9,
          "category": "CODE_STYLE",
          "difficulty": "EASY",
          "influence_on_penalty": 0
        }
      ]
    }
  },
  "4286170": {
    "message": "",
    "code_style": {
      "quality": {
        "code": "EXCELLENT",
        "text": "Code quality (beta): EXCELLENT"
      },
      "errors": [
        {
          "code": "B007",
          "text": "Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.",
          "line": "for i in range(number_of_values):",
          "line_number": 5,
          "column_number": 4,
          "category": "BEST_PRACTICES",
          "difficulty": "MEDIUM",
          "influence_on_penalty": 0
        }
      ]
    }
  }
}